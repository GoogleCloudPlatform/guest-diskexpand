#!/bin/bash
# Copyright 2020 Google Inc. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

if ! root=$(findmnt -nvr -o SOURCE /) || [[ -z "$root" ]] ||
  [[ ! -b "$root" ]]; then
  echo "Couldn't determine root device"
  exit 1
fi

echo "Checking if filesystem on ${root} needs resizing"

if ! fstype=$(findmnt -n -o FSTYPE /) || [[ -z "$fstype" ]]; then
  echo "Detecting fstype failed: ${fstype}"
  exit 1
fi

case "$fstype" in
  btrfs*)                                                                                                                                                     
    root_partition=$(mount | grep 'on \/ ' | awk '{print $1}')                                                                                                
    root_device=$(echo ${root_partition} | sed s'/[0-9]//'g)                                                                                                  
    echo "Unmounting /"
    umount /
    echo "Removing root paritition."
    parted ${root_device} rm 4
    echo "Recreating root partition to use all available space"
    # df -m 
    # /dev/sda5           9133   410      8250   5% /
    parted ${root_device} mkpart primary btrfs 8250M 100%
    echo "Running partition probe"
    sync
    partprobe
    echo "Remounting root partition"
    mount -o remount,rw ${root_partition}
    echo "Increasing Btrfs file system size"
    if ! out=$(btrfs filesystem resize max /); then
      echo "Calling btrfs \"${root}\" failed: ${out}"
      exit 1
    fi
    ;;
  ext*)
    if ! out=$(resize2fs "$root"); then
      echo "Calling resize2fs \"${root}\" failed: ${out}"
      exit 1
    fi
    ;;
  xfs*)
    if ! out=$(xfs_growfs -d /); then
      echo "Calling xfs_growfs -d / failed: ${out}"
      exit 1
    fi
    ;;
  *)
    echo "Unsupported filesystem type ${fstype}"
    exit 0
    ;;
esac

echo "Done."
